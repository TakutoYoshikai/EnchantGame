enchant();
/*
320, 512

320 / 16 = 20
512 / 16 = 32

112 / 16 = 
27
43
17
18
*/

window.onload = function(){
	var items = {"A":12, "B":15, "C":100};
	
	function itemPush(name, num){
		if (!items[name]) items[name] = num; 
		else items[name] += num;
	}
	var mapArray1 = [
			[321, 321, 321, 321, 321, 321, 321, 321, 540, 321, 321, 360, 321, 321, 321, 321, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 420, 342, 342, 342, 342, 342, 321, 342, 342, 321, 343, 342, 342, 342, 420, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 321, 342, 342, 321, 342, 342, 342, 342, 342, 540, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 321, 321, 321, 8],
			[321, 342, 342, 342, 342, 342, 342, 321, 342, 342, 321, 342, 321, 321, 321, 321, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 321, 420, 321, 8],
			[321, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 321, 342, 321, 8],
			[321, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 321, 361, 321, 8],
			[321, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 321, 540, 321, 8],
			[321, 321, 321, 540, 321, 321, 321, 321, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 321, 321, 321, 321, 321, 321, 321, 540, 321, 321, 321, 321, 321, 321, 321, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
		]
		var mapArray1_2 = [
			[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
			[-1, -1, 400, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
			[-1, -1, 560, 561, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
			[-1, -1, 580, 581, -1, -1, -1, -1, -1, -1, -1, 300, -1, -1, -1, -1, -1],
			[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
		];
	var mapColArray1 = [
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],
			[1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],
			[1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],
			[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
			
		];
		
	var mapArray2 = [
			[321, 321, 321, 321, 321, 321, 321, 540, 321, 321, 321, 321, 321, 321, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[321, 321, 321, 321, 321, 321, 321, 540, 321, 321, 321, 321, 321, 321, 321, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
			[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
		];
		
	var mapColArray2 = [
		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	];
	
	var mapArray3 = [
		[322, 321, 321, 321, 321, 321, 321, 540, 321, 321, 321, 321, 321, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 321, 321, 321, 321, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 321, 321, 540, 321, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 540, 342, 342, 342, 342, 342, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 321, 321, 540, 321, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 342, 342, 342, 420, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 321, 321, 321, 321, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		[322, 321, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 321, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322],
		
	];
	
	/*
	
	*/
	
	var mapColArray3 = [
		[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		
	]
	
	var game = new Core(320, 320);
	game.fps = 15;
	var player;
	var currentStage;
	var currentMap;
	game.preload("map10.gif", "chara0.png");
	var RPGMap = Class.create(Map, {
		initialize: function(x, y){
			Map.call(this, x, y);
			this.actions = {};
		},
		
		addAction: function(x, y, a){
			this.actions[x + "," + y] = a;
		},
		action: function(x, y){
			if (this.actions[x + "," + y]){
				this.actions[x + "," + y]();
			} else{
				console.log(x + ", " + y);
			}
		},
		deleteAction: function(x, y){
			delete this.actions[x + "," + y];
		}
	});
	var msgView;
	var enteredTime;
	var MessageView = Class.create(Label, {
		initialize: function(){
			Label.call(this);
			this.height = 100;
			this.width = 320;
			this.x = 0;
			this.y = 210;
			this.backgroundColor = "#000000";
			this.opacity = 0.6;
			this.color = "#ffffff";
			this.font = "bold 100% 'MS 明朝', sans-serif";
			this.text = "";
		},
		
		addMessage:function(msg){
			this.text = this.text + msg + "<br>";
		},
		clear: function(){
			this.text = "";
		}
	});
	
	var ListView = Class.create(Label, {
		initialize: function(){
			Label.call(this);
			this.height = 320;
			this.width = 170;
			this.backgroundColor = "#FFFFFF";
			this.opacity = 0.6;
			this.color = "#000000";
			this.text = "";
			this.font = "bold 100% 'MS 明朝', sans-serif";
			this.x = 150;
			this.y = 0;
			this.index = 0;
			this.enteredTime = Date.now();
		},
		addValue: function(s){
			this.text = this.text + s + "<br>";
		},
		loadData: function(hash){
			this.hash = hash;
			this.keys = [];
			var s = "";
			for (var key in hash){
				s = " " + key + "          " + hash[key];
				this.keys.push(key);
				this.addValue(s);
			}
		},
		clear: function(){
			this.text = "";
		},
		isInvisible: function(){
			return (this.opacity == 0);
		},
		invisible: function(){
			this.opacity = 0;
		},
		
		
	});
	var changeMap = function(map){
		currentStage.removeChild(currentMap);
		currentStage.removeChild(player);
		currentMap = map;
		currentStage.addChild(currentMap);
		currentStage.addChild(player);
		
	}
	var createMap1 = function(){
		var map = new RPGMap(16, 16);
		map.image = game.assets["map10.gif"];
		map.addAction(8, 17, function(){
			if (player.direction == 0){
				if (game.input.b){
					player.complusoryMove(0, 1);
				} else {
					player.x = 7 * 16 - 8;
					player.y = 1 * 16 - 16;
					changeMap(createMap3());
					
				}
			} else player.complusoryMove(0, -1);
		});
		map.addAction(1, 1, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("賢者の石を手に入れた!");
			itemPush("賢者の石", 1);
			mapArray1[1][1] = 342;
			mapColArray1[1][1] = 0;
			map.deleteAction(1, 1);
		});
		map.addAction(11, 0, function(){
			msgView.clear();
			msgView.addMessage("ん？ここにボタンがあるぞ？");
			msgView.addMessage("マグはボタンを押してみた");
			msgView.addMessage("壁を通り抜けられるようになった！");
			

			if (player.isPassable) player.isPassable = false;
			else player.isPassable = true;
			player.complusoryMove(0, 1);
		});
		map.addAction(8, 0, function(){
			changeMap(createMap2());
			player.x = 16 * 7 - 8;
			player.y = 16 * 8 - 16;
		});
		map.addAction(38, 3, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("10000000000000000Gを手に入れた！");
			itemPush("G", 10000000000000000);
			mapArray1[3][38] = 342;
			mapColArray1[3][38] = 0;
			map.deleteAction(38, 3); 
		});
		map.addAction(3, 7, function(){
			if (player.direction == 0) {player.complusoryMove(0, 1);}
			else player.complusoryMove(0, -1);
		});
		
		map.addAction(11, 3, function(){
			msgView.clear();
			msgView.addMessage("この扉は固くて開かない");
		});
		
		map.addAction(11, 1, function(){
			msgView.clear();
			msgView.addMessage("床の色が変だ");
		});
		
		map.addAction(15, 1, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("鍵を1個手に入れた");
			itemPush("鍵", 1);
			mapArray1[1][15] = 342;
			mapColArray1[1][15] = 0;
			map.deleteAction(15, 1);
		});
		
		map.addAction(16, 2, function(){
			if (player.direction == 1) player.complusoryMove(-1, 0);
			else player.complusoryMove(1, 0);
		});
		
		map.addAction(38, 6, function(){
			if (player.direction == 0){
				player.complusoryMove(0, 1);	
			} else {
				msgView.clear();
				msgView.addMessage("鍵が掛かっていて開かない");
			}
		});
		
		map.loadData(mapArray1, mapArray1_2);
		map.collisionData = mapColArray1;
		
		return map;
	}
	var createMap2 = function(){
		var map = new RPGMap(16, 16);
		map.image = game.assets["map10.gif"];
		map.loadData(mapArray2);
		
		map.collisionData = mapColArray2;
		map.addAction(7, 9, function(){
			if (game.input.b){
				if (player.direction == 0){
					player.complusoryMove(0, 1);
				} else {
					player.complusoryMove(0, -1);
				}
			} else{
				changeMap(createMap1());
				player.x = 8 * 16 - 8;
				player.y = 1 * 16 - 16;
			}
		});
		
		map.addAction(7, 0, function(){
			changeMap(createMap1());
			player.x = 8 * 16 - 8;
			player.y = 16 * 16 - 16;
		});
		return map;
	}
	
	var createMap3 = function(){
		var map = new RPGMap(16, 16);
		map.image = game.assets["map10.gif"];
		map.loadData(mapArray3);
		map.collisionData = mapColArray3;
		map.addAction(7, 0, function(){
			changeMap(createMap1());
			player.x = 8 * 16 - 8;
			player.y = 16 * 16 - 16;
		});
		
		map.addAction(13, 5, function(){
		});
		
		map.addAction(17, 3, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("エクスカリバーを手に入れた！");
			itemPush("エクスカリバー", 1);
			mapArray3[3][17] = 342;
			mapColArray3[3][17] = 0;
			map.deleteAction(17, 3);
		});	
		map.addAction(17, 4, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("100000G手に入れた");
			itemPush("G", 100000);
			mapArray3[4][17] = 342;
			mapColArray3[4][17] = 0;
			map.deleteAction(17, 4);
		});
		map.addAction(17, 5, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("ブリザードの書を手に入れた");
			itemPush("ブリザードの書", 1);
			mapArray3[5][17] = 342;
			mapColArray3[5][17] = 0;
			map.deleteAction(17, 5);
		});
		
		map.addAction(17, 6, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("ファイアの書を手に入れた");
			itemPush("ファイアの嵐の書", 1);
			mapArray3[6][17] = 342;
			mapColArray3[6][17] = 0;
			map.deleteAction(17, 6);
		});
		map.addAction(17, 7, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("サンダーの書を手に入れた");
			itemPush("サンダーの嵐の書", 1);
			mapArray3[7][17] = 342;
			mapColArray3[7][17] = 0;
			map.deleteAction(17, 7);
		});
		//4
		map.addAction(17, 11, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("親の遺産を手に入れた");
			itemPush("城の所有権", 1);
			mapArray3[11][17] = 342;
			mapColArray3[11][17] = 0;
			map.deleteAction(17, 11);
		});
		
		map.addAction(17, 12, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("彼女を手に入れた");
			itemPush("城の所有権", 1);
			mapArray3[12][17] = 342;
			mapColArray3[12][17] = 0;
			map.deleteAction(17, 12);
		});
		
		map.addAction(17, 13, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("夢と希望を手に入れた");
			itemPush("夢", 1);
			itemPush("希望", 1);
			mapArray3[13][17] = 342;
			mapColArray3[13][17] = 0;
			map.deleteAction(17, 13);
		});
		
		map.addAction(17, 14, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("地位と名誉を手に入れた");
			itemPush("地位", 1);
			itemPush("名誉", 1);
			mapArray3[14][17] = 342;
			mapColArray3[14][17] = 0;
			map.deleteAction(17, 14);
		});
		
		map.addAction(17, 15, function(){
			msgView.clear();
			msgView.addMessage("宝箱を開けた");
			msgView.addMessage("秘書兼愛人を手に入れた");
			itemPush("秘書兼愛人", 1);
			mapArray3[15][17] = 342;
			mapColArray3[15][17] = 0;
			map.deleteAction(17, 15);
		});
		return map;
	}
	var Player = Class.create(Sprite, {
		initialize:function(x, y){
			Sprite.call(this, 32, 32);
			this.isPassable = false;
			this.x = 16 * x - 8;
			this.y = 16 * y - 16;
			this.isMoving = false;
			this.direction = 0;
			this.walk = 1;
			var image = new Surface(32 * 3, 32 * 4);
			image.draw(game.assets["chara0.png"], 0, 0, 96, 128, 0, 0, 96, 128);
			this.image = image;
			this.addEventListener("enterframe", function(){
				if (this.isMoving){
				
					this.frame = this.direction * 3 + this.walk;
					this.moveBy(this.vx, this.vy);
					if (game.frame % 3 == 0){
						this.walk++;
						this.walk %= 3;
					}
					if ((this.vx && (this.x - 8)  % 16  == 0) || (this.vy && (this.y - 16)  % 16 == 0)){
						
					 	this.isMoving = false;
						
					}
					
			
				} else {
					this.vx = this.vy = 0;
					if( game.input.left){
						this.move(-1, 0);
					} else if (game.input.right){
						this.move(1, 0);
					} else if(game.input.down){
						this.move(0, 1);
					} else if(game.input.up){
						this.move(0, -1);
					} else if (game.input.a){
						var x = Math.floor((this.x -8) / 16) + 1;
						var y = Math.floor((this.y)/ 16) + 1;
						switch(this.direction){
							case 0: y += 1; break;
							case 1: x -= 1; break;
							case 2: x += 1; break;
							case 3: y -= 1; break;
						}
						currentMap.action(x, y);
						return;
					}
				}
			});
			
		},
		move:function(dirX, dirY, direction){
			this.vx = this.vy = 0;
			if (dirX > 0){ this.direction = 2;}
			else if (dirX < 0){ this.direction = 1;}
			else if(dirY > 0){ this.direction = 0;}
			else if(dirY < 0){ this.direction = 3;}
			this.vx = dirX * 4;
			this.vy = dirY * 4;
			if (this.vx || this.vy){
				var x = this.x + (this.vx ? this.vx / Math.abs(this.vx) * 16:0) + 16
				var y = this.y + (this.vy ? this.vy / Math.abs(this.vy) * 16:0) + 16;
				
				if (!this.isPassable){
			 		if (!currentMap.hitTest(x, y)){
				 		this.isMoving = true;
					}
				} else {
					this.isMoving = true;
				}	
			}	
		},
		complusoryMove:function(dirX, dirY){
			this.vx = this.vy = 0;
			if (dirX > 0){ this.direction = 2;}
			else if (dirX < 0){ this.direction = 1;}
			else if(dirY > 0){ this.direction = 0;}
			else if(dirY < 0){ this.direction = 3;}
			this.vx = dirX * 4;
			this.vy = dirY * 4;
			if (this.vx || this.vy){
				var x = this.x + (this.vx ? this.vx / Math.abs(this.vx) * 16:0) + 16
				var y = this.y + (this.vy ? this.vy / Math.abs(this.vy) * 16:0) + 16;
				
			 	this.isMoving = true;
			}
		}
		
	});
	
	
	game.onload = function(){
		
		
		enteredTime = Date.now();
		
		player = new Player(5, 5);
		
		msgView = new MessageView();
		currentStage = new Group();
		
		
		currentMap = createMap1();
		currentStage.addChild(currentMap);
		currentStage.addChild(player);
		
		game.keybind(32, "a"); 
		game.keybind(16, "b");
		game.rootScene.addChild(currentStage);
	 	game.rootScene.addChild(msgView);
		 
		game.rootScene.addEventListener("enterframe", function(e){
			var x = Math.min((game.width  - 16) / 2 - player.x, 0);
            var y = Math.min((game.height - 16) / 2 - player.y, 0);
            x = Math.max(game.width,  x + currentMap.width)  - currentMap.width;
            y = Math.max(game.height, y + currentMap.height) - currentMap.height;
            currentStage.x = x;
            currentStage.y = y;
			
		});
	}
	game.start();
}